sudo: required 
dist: bionic
language: generic
python:
  - "3.7" 
branches:
  only:
  - master

cache:
  directories:
    - $HOME/.ccache

compiler:
  - gcc
notifications:
  email:
    on_failure: always

env:
  global:
   - ROS_REPO=ros
   - NOT_TEST_INSTALL=true
   - CCACHE_DIR=$HOME/.ccache  
   - ECS_API=http://127.0.0.1:8000
   - AGENT_POST_API=https://postman-echo.com
   - ECS_DB_LOC=error_classification_server/ecs.db
   - CODE_COVERAGE="coveralls.io"
   #- CODECOV_TOKEN="267941d9-5505-4ad8-a79a-c45af9047968"
  matrix:
    - USE_DEB=true  
      ROS_DISTRO="melodic" 
      ROS_REPO=ros
      ADDITIONAL_DEBS="libcpprest-dev curl ros-melodic-roslib ros-melodic-rostest ros-melodic-diagnostics ros-melodic-navigation"
      CMAKE_ARGS="-DENABLE_COVERAGE_TESTING=ON -DCMAKE_BUILD_TYPE=Debug"
      DOCKER_RUN_OPTS="--net=host -e ECS_API=http://127.0.0.1:8000 -e AGENT_POST_API=https://postman-echo.com"
      #AFTER_SCRIPT="./.coverage.sh"
allow_failures:
    - env: ROS_DISTRO="melodic" ROS_REPO=ros  ADDITIONAL_DEBS="apt-utils libcpprest-dev"
before_install:
  #installing microsoft libcpprest dependency
  - sudo apt-get install libcpprest-dev
  - pip install --user cpp-coveralls
  - curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -

install:
  - git clone https://github.com/cognicept-admin/error_classification_server.git  
  #- git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci.git .industrial_ci -b master
  - git clone --quiet --depth 1 https://github.com/Briancbn/industrial_ci.git .industrial_ci -b pr-coverage

before_script:
  - sudo apt-get update
  - sudo apt-get install python3-pip
  - sudo apt-get install python3-setuptools
  - sudo apt-get install apt-utils libcpprest-dev
  - sudo apt install gcovr
  #- export ECS_API=http://127.0.0.1:8000
  #- export AGENT_POST_API=https://postman-echo.com
  - export ECS_API=http://127.0.0.1:8000
  - export AGENT_POST_API=https://postman-echo.com
  - export ECS_DB_LOC=error_classification_server/ecs.db
  - echo $ECS_API
  - pip3 install SQLAlchemy==1.3.13
  - pip3 install sanic
  - pip3 install databases
  - pip3 install aiosqlite
  - pip3 install uvloop==0.14.0
  #- pip3 install -r error_classification_server/requirements.txt
  #- python3 error_classification_server/src/ecs_endpoint.py & APP_PID=$!
  - chmod +x ci-test.sh
  #- chmod +x .coverage.sh
  - ./ci-test.sh
  - export ECS_DB_LOC=error_classification_server/ecs.db
  - sleep 10

script:
  - curl 'http://127.0.0.1:8000/ping'
  - .industrial_ci/travis.sh
  #- ./.coverage.sh
#  - gcovr -r . --exclude-directories test
  - curl 'http://127.0.0.1:8000/ert/error-data/'
  - curl 'http://127.0.0.1:8000/ping'


# after_success:
#   - coveralls --exclude lib --exclude tests --gcov-options '\-lp'
